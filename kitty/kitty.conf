# File encoding and format specification
# vim:fileencoding=utf-8:ft=conf

# Font Configuration
font_family UbuntuMono Nerd Font
# font_family monospace
bold_font        auto
italic_font      auto
bold_italic_font auto
# italic_font UbuntuMono Nerd Font Propo:style=Medium Italic
# bold_font UbuntuMono Nerd Font Mono:style=Bold
# bold_italic_font auto  # Assuming 'auto' is sufficient unless specified

# Font Size
font_size 12.0

# vim:ft=kitty

## name: Tokyo Night
## license: MIT
## author: Folke Lemaitre
## upstream: https://github.com/folke/tokyonight.nvim/raw/main/extras/kitty/tokyonight_night.conf


background #1a1b26
foreground #c0caf5
selection_background #283457
selection_foreground #c0caf5
url_color #73daca
cursor #c0caf5
cursor_text_color #1a1b26

# Tabs
active_tab_background #7aa2f7
active_tab_foreground #16161e
inactive_tab_background #292e42
inactive_tab_foreground #E8FFFF
#tab_bar_background #15161e

# Windows
active_border_color #7aa2f7
inactive_border_color #292e42

# normal
color0 #15161e
color1 #f7768e
color2 #9ece6a
color3 #e0af68
color4 #7aa2f7
color5 #bb9af7
color6 #7dcfff
color7 #a9b1d6

# bright
color8  #414868
color9  #ff899d
color10 #9fe044
color11 #faba4a
color12 #8db0ff
color13 #c7a9ff
color14 #a4daff
color15 #c0caf5

# extended colors
color16 #ff9e64
color17 #db4b4b
shell_integration enabled
cursor_shape block

# Scrollback and Mouse
scrollback_lines 2000
wheel_scroll_multiplier 2

# Opacity
background_opacity 0.9

# Window management
initial_window_width 800
initial_window_height 480

# Padding and Margins
window_margin_width 1
window_padding_width 1

# Key Mappings (Approximations as per provided setup)
# map ctrl+s>r reload_config
# map ctrl+s>x close_window
clear_all_shortcuts yes
map kitty_mod+f5 load_config_file
map kitty_mod+t new_tab
map kitty_mod+enter new_window

map kitty_mod+e open_url_with_hints

map kitty_mod+escape kitty_shell

map ctrl+alt+page_down scroll_page_down
map ctrl+alt+page_up scroll_page_up

# Window and Tab Close Shortcuts
map kitty_mod+q close_window
map kitty_mod+w close_tab

# Quick Tab Switching
map kitty_mod+1 goto_tab 1
map kitty_mod+2 goto_tab 2
map kitty_mod+3 goto_tab 3
map kitty_mod+4 goto_tab 4
map kitty_mod+5 goto_tab 5
map kitty_mod+6 goto_tab 6
map kitty_mod+7 goto_tab 7
map kitty_mod+8 goto_tab 8
map kitty_mod+9 goto_tab 9

map alt+] next_tab
map alt+[ previous_tab
map alt+shift+] move_tab_forward
map alt+shift+[ move_tab_backward

map kitty_mod+d detach_window
map kitty_mod+n detach_window new-tab

map kitty_mod+v paste_from_clipboard
map kitty_mod+c copy_to_clipboard

map kitty_mod+l next_layout

map ctrl+left resize_window narrower
map ctrl+right resize_window wider
map ctrl+up resize_window taller
map ctrl+down resize_window shorter 3
# reset all windows in the tab to default sizes
map ctrl+home resize_window reset

# Mouse Configuration
mouse_hide_wait 0.0

# Behavior
copy_on_select yes

confirm_os_window_close 0

cursor #fff
cursor_shape block
cursor_underline_thickness 0.1
cursor_beam_thickness 1.0

allow_remote_control yes
listen_on unix:/tmp/kitty

# kitty-scrollback.nvim Kitten alias
action_alias kitty_scrollback_nvim kitten /home/dan/.local/share/nvim/lazy/kitty-scrollback.nvim/python/kitty_scrollback_nvim.py --nvim-args --clean --noplugin -n +'set clipboard=unnamedplus'

# Browse scrollback buffer in nvim
map kitty_mod+[ kitty_scrollback_nvim 

# Browse output of the last shell command in nvim
# map kitty_mod+[ kitty_scrollback_nvim --config ksb_builtin_last_ctrl_output 

# Show clicked command output in nvim
mouse_map kitty_mod+right press ungrabbed combine : mouse_select_command_output : kitty_scrollback_nvim --config ksb_builtin_last_visited_ctrl_output

map kitty_mod+j next_window
map kitty_mod+k previous_window


map kitty_mod+alt+j move_window_forward
map kitty_mod+alt+k move_window_backward

map kitty_mod+alt+t set_tab_title

# moves the window into a new OS window
map ctrl+f2 detach_window
# moves the window into a new tab
# map ctrl+f3 detach_window new-tab
# moves the window into the previously active tab
map ctrl+f3 detach_window tab-prev
# moves the window into the tab at the left of the active tab
map ctrl+f3 detach_window tab-left
# moves the window into a new tab created to the left of the active tab
map ctrl+f3 detach_window new-tab-left
# asks which tab to move the window into
map ctrl+f4 detach_window ask

# Similarly, you can detach the current tab, with:

# moves the tab into a new OS window
# map ctrl+f2 detach_tab
# asks which OS Window to move the tab into
map ctrl+f4 detach_tab ask

# Finally, you can define a shortcut to close all windows in a tab other than the currently active window:

map f9 close_other_windows_in_tab
# map f1 launch --type overlay --title "Kitty Keybindings" bash -c "grep -E '^\s*(map|mouse_map)\s+.*' ${HOME}/.config/kitty/kitty.conf | sort | fzf --reverse --border --prompt 'Kitty Keybindings > '"
map f1 launch --type overlay --title "Kitty Keybindings"

tab_bar_background black
tab_title_template [{index}]{title}
# active_border_color #ff0000
# inactive_border_color #00ff00
# bell_border_color #0000ff
# tab_title_template "{fmt.bg.red}{bell_symbol}{activity_symbol}{fmt.bg.tab}{tab.last_focused_progress_percent}{title}"

enable_audio_bell no
