# File encoding and format specification
# vim:fileencoding=utf-8:ft=conf

# Font Configuration
font_family UbuntuMono Nerd Font
# font_family monospace
bold_font        auto
italic_font      auto
bold_italic_font auto
# italic_font UbuntuMono Nerd Font Propo:style=Medium Italic
# bold_font UbuntuMono Nerd Font Mono:style=Bold
# bold_italic_font auto  # Assuming 'auto' is sufficient unless specified

# Font Size
font_size 12.0

# Foreground and Background
foreground #ffffff
background #141519

# Colors
color0  #262626
color8  #393939

color1  #ee5396
color9  #ee5396

color2  #42be65
color10 #42be65

color3  #ffe97b
color11 #ffe97b

color4  #33b1ff
color12 #33b1ff

color5  #ff7eb6
color13 #ff7eb6

color6  #3ddbd9
color14 #3ddbd9

color7  #dde1e6
color15 #ffffff

# Cursor Configuration
cursor #ee5396
shell_integration enabled
cursor_shape block

# Scrollback and Mouse
scrollback_lines 2000
wheel_scroll_multiplier 2

# Opacity
background_opacity 0.9

# Window management
initial_window_width 800
initial_window_height 480

# Padding and Margins
window_margin_width 1
window_padding_width 1

# Key Mappings (Approximations as per provided setup)
# map ctrl+s>r reload_config
# map ctrl+s>x close_window

# Window and Tab Close Shortcuts
map ctrl+shift+q close_window
map ctrl+shift+w close_tab

# Quick Tab Switching
map ctrl+shift+1 goto_tab 1
map ctrl+shift+2 goto_tab 2
map ctrl+shift+3 goto_tab 3
map ctrl+shift+4 goto_tab 4
map ctrl+shift+5 goto_tab 5
map ctrl+shift+6 goto_tab 6
map ctrl+shift+7 goto_tab 7
map ctrl+shift+8 goto_tab 8
map ctrl+shift+9 goto_tab 9

# shiftplits Management
map ctrl+shift>\ new_split:right
map ctrl+shift>- new_split:down
map ctrl+shift>z toggle_split_zoom
map ctrl+shift+s>e equalize_splits

# Detach window to new OS window
map ctrl+shift+d detach_window
map ctrl+shift+n detach_window new_tab

# Mouse Configuration
mouse_hide_wait 0.0

# Behavior
copy_on_select yes

confirm_os_window_close 0

cursor #fff
cursor_shape block
cursor_underline_thickness 0.1
cursor_beam_thickness 1.0

allow_remote_control yes
listen_on unix:/tmp/kitty

# kitty-scrollback.nvim Kitten alias
action_alias kitty_scrollback_nvim kitten /home/dan/.local/share/nvim/lazy/kitty-scrollback.nvim/python/kitty_scrollback_nvim.py

# Browse scrollback buffer in nvim
map kitty_mod+] kitty_scrollback_nvim
# Browse output of the last shell command in nvim
map kitty_mod+[ kitty_scrollback_nvim --config ksb_builtin_last_ctrl_output
# Show clicked command output in nvim
mouse_map ctrl+shift+right press ungrabbed combine : mouse_select_command_output : kitty_scrollback_nvim --config ksb_builtin_last_visited_ctrl_output

map ctrl+shift+j next_window
map ctrl+shift+k previous_window

map ctrl+shift+s+page_up move_tab_backward
map ctrl+shift+s+page_down move_tab_forward

map kitty_mod+s+k move_window_backward
map kitty_mod+s+j move_window_forward

# map ctrl+shift+s+v paste_from_selection

# map ctrl+shift+s
map ctrl+s

# moves the window into a new OS window
map ctrl+f2 detach_window
# moves the window into a new tab
map ctrl+f3 detach_window new-tab
# moves the window into the previously active tab
map ctrl+f3 detach_window tab-prev
# moves the window into the tab at the left of the active tab
map ctrl+f3 detach_window tab-left
# moves the window into a new tab created to the left of the active tab
map ctrl+f3 detach_window new-tab-left
# asks which tab to move the window into
map ctrl+f4 detach_window ask

# Similarly, you can detach the current tab, with:

# moves the tab into a new OS window
map ctrl+f2 detach_tab
# asks which OS Window to move the tab into
map ctrl+f4 detach_tab ask

# Finally, you can define a shortcut to close all windows in a tab other than the currently active window:

map f9 close_other_windows_in_tab
map f1 launch --type=overlay bash -i -c 'rg "^\s*(map|mouse_map)\s+.*" ~/.config/kitty/kitty.conf | fzf'
